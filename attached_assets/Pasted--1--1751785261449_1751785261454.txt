몇 초 동안 생각함
이번 컴파일 에러는 크게 다섯 가지 범주로 나눌 수 있습니다. 아래 순서대로 한 가지씩 점검·수정하시면 빌드가 정상화될 겁니다.

1. 중복된 메서드 정의 제거
[ERROR] method getWordStats() is already defined in class AdminController

원인: 같은 클래스(또는 인터페이스)에 동일한 시그니처의 메서드를 두 번 이상 선언했기 때문입니다.

조치:

AdminController에서 getWordStats()가 두 번 등장하는 위치를 찾습니다.

역할이 중복되는 쪽을 삭제하거나, 어노테이션·로직을 합쳐 하나의 메서드로 만드세요.

UserWordProgressRepository, WordRepository 인터페이스에서도 동일한 방식으로 중복 선언을 제거합니다.

java
복사
편집
// 예시: AdminController.java
// ↓ 중복된 부분 중 하나를 지운다
@GetMapping("/word-stats")
public WordStatsDto getWordStats() { … }

// ↓ 중복 선언 제거!
2. 로거(log) 심볼을 찾을 수 없음
[ERROR] cannot find symbol: variable log

원인: AdminInitializer, CustomUserDetailsService 등에서 log.info(...)를 호출하는데, log 변수를 선언하거나 생성한 로거가 없습니다.

조치:

Lombok 사용 시: 클래스 상단에 @Slf4j를 추가하세요.

직접 선언할 때:

java
복사
편집
private static final org.slf4j.Logger log =
    org.slf4j.LoggerFactory.getLogger(AdminInitializer.class);
예:

java
복사
편집
@Component
@Slf4j           // ← Lombok 어노테이션
public class AdminInitializer implements ApplicationRunner {
    // 이제 log.info(…) 호출 가능
}
3. 엔티티·DTO에 없는 Getter/Builder 메서드
[ERROR] cannot find symbol: method getEmail(), builder(), getMaxWordsPerDay() 등

원인: 호출하는 메서드(예: user.getEmail(), User.builder(), wordDto.getWord() 등)가 실제 클래스에 정의되어 있지 않습니다.

조치:

Lombok 어노테이션

엔티티·DTO 클래스에 @Getter 또는 @Data를 붙여서 모든 필드에 Getter를 생성하도록 합니다.

builder()를 쓰려면 클래스에 @Builder를 추가해야 합니다.

필드 확인

호출하려는 메서드 명과 필드명이 일치하는지(카멜케이스, 철자 등) 확인하세요.

예를 들어 enableFeedback 필드가 private boolean enableFeedback;로 선언돼야 getEnableFeedback()가 생성됩니다.

추가 메서드

서비스에서 updateLearningSettings(LearningSettingsDto)를 호출 중이라면, AdminService에 해당 시그니처의 메서드를 만들거나 컨트롤러 호출부를 수정하세요.

java
복사
편집
@Getter
@Builder
public class LearningSettingsDto {
    private int maxWordsPerDay;
    private int maxSentencesPerDay;
    private int difficultyLevel;
    private boolean enableAudio;
    private boolean enableFeedback;
    // … 필요 메서드(필드) 추가
}
4. 서비스·컨트롤러 시그니처 불일치
[ERROR] method getDailyStats() cannot be applied to given types,
[ERROR] incompatible types: WordStatsDto cannot be converted to List<Map<String, Object>>

원인: 컨트롤러에서 기대하는 서비스 메서드 시그니처와 실제 구현이 다릅니다. 반환 타입도 맞지 않습니다.

조치:

AdminController에서 호출하는 adminService.getDailyStats(String) 대신,

서비스에 public List<Map<String,Object>> getDailyStats(String date) 메서드를 구현하거나,

컨트롤러에서 매개변수 없이 getDailyStats()를 호출하도록 변경하세요.

getWordStats()가 WordStatsDto를 반환하는데 컨트롤러는 List<Map<…>>를 기대한다면,

둘 중 하나를 통일하세요.

@ResponseBody로 내려줄 타입이 일치해야 합니다.

5. 빌드 재검증
중복 제거 → mvn clean

Lombok 어노테이션 추가 → @Slf4j, @Getter, @Builder

필요한 메서드·시그니처 구현 → DTO, Service, Controller 정리

컴파일:

bash
복사
편집
mvn compile
정상 빌드되면:

bash
복사
편집
mvn spring-boot:run
이 다섯 단계를 차례로 적용하시면,

중복 정의,

로거 미정의,

누락된 Lombok/메서드,

시그니처·타입 불일치
문제들이 모두 해결됩니다.
혹시 수정한 뒤 또 다른 에러가 뜨거나
문제가 남아 있으면, 해당 클래스의 코드 스니펫(7~10줄 단위)을 공유해 주세요.
바로 살펴보고 추가로 안내드리겠습니다!